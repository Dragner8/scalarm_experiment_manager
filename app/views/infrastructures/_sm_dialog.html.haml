%h2= t('infrastructure.tree.sm_dialog.header')

%a.close-reveal-modal &#215;

#destroy_simulation_manager_dialog.reveal-modal(data-reveal="")
  %h2= t('.destroy_dialog.header')
  .row
    .small-6.columns.centered
      = link_to t('yes'),simulation_manager_command_infrastructure_path(  |
        command: 'stop', record_id: record.id, infrastructure_name: facade.short_name), |
        id: 'destroy-yes', class: button_classes, method: :post, remote: true |
    .small-6.columns.centered
      %span.no_button{class: button_classes}= t('no')

- begin
  %h3= t('.resource_header', resource_id: record.resource_id, facade_name: facade.long_name)

  .row.small-12.columns
    .small-2.columns.action-button#restart_simulation_manager_button
      = link_to raw('<i class="fi-refresh"/>&nbsp;&nbsp;&nbsp;') + t('.restart'), |
        simulation_manager_command_infrastructure_path(  |
        command: 'restart', record_id: record.id, infrastructure_name: facade.short_name), |
        class: button_classes, method: :post, remote: true |

    .small-2.columns.action-button#destroy_simulation_manager_button
      %span#destroyExperimentButton{class: "#{button_classes} alert"}
        %i.fi-stop
        = raw '&nbsp;&nbsp;&nbsp;'
        = t('.stop')
    .small-8.columns

  .row.small-12.columns
    %table
      %tr
        %th= t('.resource_state')
        %th= t('infrastructures.sm_dialog.resource_id')
        %th= t('infrastructures.sm_dialog.simulation_manager_state')
        %th= t('infrastructures.sm_dialog.sm_initialized_at')
        %th= t('infrastructures.sm_dialog.created_at')
        %th= t('infrastructures.sm_dialog.time_limit')
        %th= t('infrastructures.sm_dialog.experiment')
        %th= t('infrastructures.sm_dialog.specific')

        %tr
          %td
            - begin
              - facade.yield_simulation_manager(record) do |sm|
                = t(".resource_states.#{sm.resource_status.to_s}", default: t('.resource_states.unknown', state: sm.resource_status.to_s))
              -#TODO: delete? yield should not throw an exception
            - rescue Exception => error
              =t('.resource_state_error', error: error.to_s)

          - begin
            = render partial: "infrastructures/scheduler/simulation_manager_info",
                locals: {partial_name: partial_name, record: record}
          - rescue Exception => e
            %tr
              %td(colspan="7" )
                - raise e if e.kind_of? ActionView::MissingTemplate
                =t('infrastructure.information.sm_record_error', error: e.to_s)

- rescue Exception => e
  =t('infrastructure.information.sm_record_error', error: e.to_s)

:javascript
  $(function() {
    $(document).foundation();

    new window.SmDialog("#dialog");
  });