%h2= t('infrastructure.tree.sm_dialog.header')

%a.close-reveal-modal &#215;

- begin
  - @facade.yield_simulation_manager(@sm_record) do |sm|
    %h3= t('resource_header', resource_id: @sm_record.resource_id, facade_name: @facade.long_name)
    %ul
      %li
        %strong= t('resource_state') + ': '
        =sm.resource_status.to_s
      - record_state = case @sm_record.state
        - when :error then t('state.error')
        - when :initialized then t('state.initialized')
        - when :before_init then t('state.not_initialized')
      %li
        %strong= t('simulation_manager_state') + ': '
        =record_state
      - if @sm_record.error
        %ul
          %li
            %strong= t('error_message') + ': '
            = t('infrastructure.information.sm_info.errors.'+@sm_record.error, default: @sm_record.error)
            - unless @sm_record.error_log.nil?
              %li
                %strong= t('infrastructure.information.sm_info.error_log') + ': '
                %br
                = raw(@sm_record.error_log.sub("\n", '<br/>'))
      - elsif @sm_record.sm_initialized
        %li
          %strong= t('sm_initialized_at') + ':'
          =@sm_record.sm_initialized_at.to_s
      %li
        %strong= t('created_at') + ': '
        =@sm_record.created_at.to_s
      %li
        %strong= t('time_limit') + ': '
        =@sm_record.created_at.since(@sm_record.time_limit.to_i.minutes).to_s + ' ' + "(#{@sm_record.time_limit.to_s} minutes)"
      %li
        %strong= t('experiment_id') + ': '
        =@sm_record.experiment_id.to_s
- rescue Exception => e
  =t('infrastructure.information.sm_record_error', error: e.to_s)

:javascript
  $(function() {
    $(document).foundation();

    new window.SmDialog("#node-dialog");
  });