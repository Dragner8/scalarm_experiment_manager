-#- record_state_color = case record.state
-#  - when :error then 'firebrick'
-#  - when :initialized then 'forestgreen'
-#  - when :before_init then 'goldenrod'
-#  - else 'lightsteelblue'

%td= record.resource_id
-# infrastructure-specific info

-# general record info
%td
  %i{class: "fi-stop sm-#{record.state or 'unknown'}"}
  - if record.state == :error
    %ul
      %li
        %strong= t('infrastructures.sm_dialog.error_message') + ': '
        = t('infrastructure.information.sm_info.errors.'+record.error, default: record.error)
        - unless record.error_log.nil?
          %li
            %strong= t('infrastructure.information.sm_info.error_log') + ': '
            %br
            = raw(record.error_log.sub("\n", '<br/>'))
%td
  - if record.state == :initialized
    =record.sm_initialized_at.strftime('%Y-%m-%d %H:%M:%S')
  - else
    ='-'
%td
  =record.created_at.strftime('%Y-%m-%d %H:%M:%S')
%td
  ="#{record.time_limit.to_s} min"
%td
  = link_to "#{record.experiment.name}", experiment_path(record.experiment_id)
%td
  %ul
    -begin
      = render partial: "infrastructures/scheduler/simulation_managers_info/#{partial_name}", locals: {record: record}
    -rescue ActionView::MissingTemplate => exc
      = exc.to_s
      -# ignore if not found