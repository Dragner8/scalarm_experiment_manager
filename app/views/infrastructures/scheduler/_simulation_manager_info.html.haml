-# infrastructure-specific info
-begin
  = render partial: "infrastructures/scheduler/simulation_managers_info/#{partial_name}", locals: {record: record}
-rescue ActionView::MissingTemplate => exc
  = exc.to_s
  -# ignore if not found

-# general record info
- record_state = case record.state
  - when :error then t('infrastructures.sm_dialog.state.error')
  - when :initialized then t('infrastructures.sm_dialog.state.initialized')
  - when :before_init then t('infrastructures.sm_dialog.state.not_initialized')
  - else t('infrastructures.sm_dialog.state.unknown')
%li
  %strong= t('infrastructures.sm_dialog.simulation_manager_state') + ': '
  =record_state
- if record.state == :error
  %ul
    %li
      %strong= t('infrastructures.sm_dialog.error_message') + ': '
      = t('infrastructure.information.sm_info.errors.'+record.error, default: record.error)
      - unless record.error_log.nil?
        %li
          %strong= t('infrastructure.information.sm_info.error_log') + ': '
          %br
          = raw(record.error_log.sub("\n", '<br/>'))
- elsif record.state == :initialized
  %li
    %strong= t('infrastructures.sm_dialog.sm_initialized_at') + ':'
    =record.sm_initialized_at.to_s
%li
  %strong= t('infrastructures.sm_dialog.created_at') + ': '
  =record.created_at.to_s
%li
  %strong= t('infrastructures.sm_dialog.time_limit') + ': '
  =record.created_at.since(record.time_limit.to_i.minutes).to_s + ' ' + "(#{record.time_limit.to_s} minutes)"
%li
  %strong= t('infrastructures.sm_dialog.experiment') + ': '
  = link_to "#{record.experiment.name} (#{record.experiment_id})", experiment_path(record.experiment_id)

