- content_for :title, t('.title')
- content_for :help, raw(t('help.simulations.register'))

%section.panel.radius
  %h3.subheader= t('.experiments_label')

  .content
    = form_tag(simulations_path, id: 'scenario_form', multipart: true, class: 'custom') do
      .row
        %fieldset
          %legend= t("simulations.registration.basic_information")
          .row
            .small-3.columns
              %label.right.inline{for: 'simulation_name'}= t("simulations.registration.simulation_name")
            .small-9.columns
              = text_field_tag 'simulation_name', '', style: 'max-width: 100%;'
          .row
            .small-3.columns
              %label.right.inline{for: 'simulation_description'}= t("simulations.registration.simulation_description")
            .small-9.columns
              = text_area_tag 'simulation_description', '', rows: 2, style: 'max-width: 100%;'

      -# will be used as computed value of input definition designer
      %input#designer_value{type: 'hidden', name: 'simulation_input'}

        %fieldset#input-definition
          %legend= t('simulations.registration.simulation_input')

          .row{style: 'margin-top: -3rem;'}
            %ul.button-group.right.round
              %li
                %a#input-designer-on.tiny.button.secondary(href="#") Design
              %li
                %a#input-designer-off.tiny.button.secondary(href="#") Upload JSON

          .row#input-upload.hide
            .small-5.columns
              %label.right.inline{for: 'simulation_input'}= t("simulations.registration.simulation_input_desc") + ':'
            .small-7.columns
              = file_field_tag 'simulation_input', id: 'simulation_input_file'

          .row#input-designer.hide
            .row
              .small-10.columns.small-centered
                #cannot_edit_alert.alert-box.warning.radius.hidden{'data-alert' => true}
                  ="This simulation scenario input definition cannot be edited with graphical editor due to its nested structure. If you use editor, it will overwrite old input definition."


            .small-5.columns
              %fieldset#param-list
                %legend= "Parameters"
                .row
                  %ul.stack-for-small.button-group
                    %li
                      %a.button.tiny.radius#add-param.unselectable
                        %i.fa.fa-plus.fa-fw
                        = 'Add'
                    %li
                      %a.button.tiny.radius#remove-param.unselectable
                        %i.fa.fa-minus.fa-fw
                        = 'Remove'
                .row#params-tree.hidden
            .small-7.columns
              %fieldset#param-config.hidden
                %legend= "Parameter specification"
                .row
                  .small-3.columns
                    %label.right.inline{for: 'param_id'}= 'Parameter ID:'
                  .small-9.columns
                    %input#param_id{type: 'text', name: 'param_id'}
                .row
                  .small-3.columns
                    %label.right.inline{for: 'param_label'}= 'Label:'
                  .small-9.columns
                    %input#param_label{type: 'text', name: 'param_label'}
                .row
                  .small-3.columns
                    %label.right.inline{for: 'param_type'}= 'Type:'
                  .small-9.columns
                    %select#param_type{name: 'param_type'}
                      %option{value: 'integer'}= "Integer"
                      %option{value: 'float'}= "Float"
                      %option{value: 'string'}= "String"

                .row#param-range.hidden
                  .small-6.columns
                    .row
                      .small-3.columns
                        %label.right.inline{for: 'param_min'}= 'Min:'
                      .small-9.columns
                        %input#param_min{type: 'text', name: 'param_min'}
                  .small-6.columns
                    .row
                      .small-3.columns
                        %label.right.inline{for: 'param_max'}= 'Max:'
                      .small-9.columns
                        %input#param_max{type: 'text', name: 'param_max'}
                .row#param-allowed.hidden
                  .small-3.columns
                    %label.right.inline{for: 'param_allowed_area'}= 'Allowed values (each in new line):'
                  .small-9.columns
                    %textarea#param_allowed_area{name: 'param_allowed_area', rows: 4}
                .row#editor-buttons
                  %ul.stack-for-small.button-group
                    %li
                      %a.tiny.button.radius.success#editor-save.disabled.unselectable
                        %i.fa.fa-save.fa-fw
                        = 'Save changes'
                      %a.tiny.button.radius#editor-discard.disabled.unselectable
                        %i.fa.fa-undo.fa-fw
                        = 'Discard changes'
                #unsaved-modal.reveal-modal.small{'data-reveal' => true}
                  .row{style: "margin-bottom: 25px;"}
                    .small-12.columns
                      = 'There are unsaved changes in parameter editor. Please save them or discard changes.'
                  .row
                    .small-12.columns.text-center
                      %a#unsaved-ok.button.radius.medium= 'OK'

      .row
        %fieldset#simulation-files
          %legend= t('simulations.registration.files')
          .row
            .row
              .small-10.columns.small-centered
                %fieldset
                  %legend= t("simulations.registration.simulation_binaries")
                  .row
                    .small-5.columns
                      %label.right.inline{for: 'simulation_binaries'}= t("simulations.registration.simulation_binaries_desc") + ':'
                    .small-7.columns
                      = file_field_tag 'simulation_binaries'

            .row
              = render partial: 'form_row', object: 'input_writer',
                locals: { input_element: select_tag('input_writer_id', options_for_select(@input_writers), class: 'medium') }
              = render partial: 'form_row', object: 'executor',
                locals: { input_element: select_tag('executor_id', options_for_select(@executors), class: 'medium') }
            .row
              = render partial: 'form_row', object: 'output_reader',
                locals: { input_element: select_tag('output_reader_id', options_for_select(@output_readers), class: 'medium') }
              = render partial: 'form_row', object: 'progress_monitor',
                locals: { input_element: select_tag('progress_monitor_id', options_for_select(@progress_monitors), class: 'medium') }

          .row
            .small-2.small-centered.columns
              = submit_tag t('.upload'), class: 'button expand radius last-element'


%section.panel.radius.last-element
  %h3.subheader= t('.component_registration_title')

  .content
    = form_tag(simulations_upload_component_path, :multipart => true) do
      .row
        .small-3.columns= label_tag :component_name, t('.component_name') + ':', class: 'inline right'
        .small-6.columns= text_field_tag 'component_name'
        .small-3.columns

      .row
        .small-3.columns= label_tag :component_code, t('.component_code') + ':', class: 'inline right'
        .small-6.columns= file_field_tag 'component_code'
        .small-3.columns

      .row
        .small-3.columns= label_tag :component_type, t('.component_type') + ':', class: 'inline right'
        .small-6.columns= select_tag('component_type', adapter_types, class: 'medium')
        .small-3.columns


      .row
        .small-2.small-centered.columns
          = submit_tag t('.upload'), class: 'button expand radius last-element'

- content_for :javascript do
  :javascript
    $(function() {
      window.toggle_panels_on_title_click();
      $('.last-element h3:first').click();

      window.scenario_registration = new window.ScenarioRegistration();
    });
