-require 'infrastructure_facades/clouds/cloud_factory'
-# local variables: experiment, user

.row{class: 'panel callout radius'}
  = raw t('infrastructure.information.credentials_info', account_link: link_to('account management panel', user_controller_account_path))

- first = true
%dl.tabs(data-tab="")
  - CloudFactory.provider_names.each do |cloud_name|
    %dd{class: "#{first ? 'active' : '' }"}
      %a{ href: "##{cloud_name}" }= CloudFactory.full_name(cloud_name)
    - first = false if first

- first = true
.tabs-content
  - CloudFactory.provider_names.each do |cloud_name|
    - cloud_class = CloudFactory.client_class(cloud_name)
    - creds = CloudSecrets.find_by_query('cloud_name'=>cloud_name, 'user_id'=>user.id)
    - begin
      - cloud_client = (creds.nil? ? nil : cloud_class.new(creds))
    - rescue
      - cloud_client = nil
    - invalid_credentials = (cloud_client.nil? or not cloud_client.valid_credentials?)
    .content{ id: cloud_name, class: "#{first ? 'active' : '' }", style: 'width: 100%' }
      - first = false if first
      .row
        - if invalid_credentials
          .row{class: 'panel callout radius'}
            = t('infrastructure.information.no_credentials_info', cloud_name: CloudFactory.full_name(cloud_name))
        %dl.accordion(data-accordion="")
          %dd
            %a(href="#submission-panel-#{cloud_class.short_name}")= t 'infrastructure.information.submission_label'
            .content{id: "submission-panel-#{cloud_class.short_name}", class: "#{invalid_credentials ? 'disabled' : ''}"}
              %p
                = form_tag schedule_simulation_managers_infrastructure_path, remote: true, class: 'custom' do
                  = hidden_field_tag 'experiment_id', experiment.id
                  = hidden_field_tag 'infrastructure_type', cloud_name

                  .row
                    .small-4.columns
                      = label_tag :job_counter, t('infrastructure.information.instance_counter') + ':', class: 'inline right'
                    .small-4.columns
                      = text_field_tag :job_counter
                    .small-4.columns
                  - images = CloudImageSecrets.find_all_by_query(user_id: user.id, cloud_name: cloud_name).map{|i| ["#{i.image_id} --- #{i.image_login}", i.id]}
                  .row
                    .small-4.columns
                      = label_tag :image_secrets_id, t('infrastructure.information.image_label') + ':', class: 'inline right'
                    .small-4.columns
                      = select_tag :image_secrets_id, options_for_select(images)
                    .small-4.columns
                  .row
                    .small-4.columns
                      = label_tag :instance_type, t('infrastructure.information.vm_type') + ':', class: 'inline right'
                    .small-4.columns
                      = select_tag :instance_type, options_for_select(cloud_class.instance_types.map{|k, desc| [desc, k]})
                    .small-4.columns
                  - unless invalid_credentials
                    = render partial: "infrastructure/information/cloud/#{cloud_name}", locals: { cloud_client: cloud_client }
                  .row
                    .small-4.columns
                      = label_tag :time_limit, t('infrastructure.information.time_constraint') + ':', class: 'inline right'
                    .small-4.columns
                      = text_field_tag :time_limit
                    .small-4.columns
                  .row
                    .small-4.columns
                      = label_tag :start_at, t('infrastructure.information.start_at') + ':', class: 'inline right'
                    .small-4.columns
                      = text_field_tag :start_at
                    .small-4.columns
                  .row
                    .small-12.columns.text-center
                      = submit_tag t('infrastructure.information.submit'), class: 'button radius'
          %dd
            %a(href="#vms-#{cloud_name}")= t('infrastructure.information.scheduled_label')
            .content{id: "vms-#{cloud_name}"}
              %p
                %p= @current_states[cloud_name.to_sym]
                %ul.circle
                  - @simulation_managers[cloud_name.to_sym].each do |vm_record|
                    %li
                      - begin
                        %strong= t('.sm_info.vm_id') + ': '
                        =vm_record.vm_id.to_s + ', '
                        %strong= t('infrastructure.information.launched_at') + ': '
                        =vm_record.created_at.to_s + ', '
                        %strong= t('infrastructure.information.time_limit') + ': '
                        =vm_record.time_limit.to_s + ', '
                        %strong= t('infrastructure.information.experiment_id') + ': '
                        =vm_record.experiment_id.to_s
                        %br
                        %strong= t('.sm_info.ssh_address') + ': '
                        =(vm_record.public_host ? "#{vm_record.public_host}:#{vm_record.public_ssh_port}" : t('.sm_info.no_ssh_address')) + ', '
                        %strong= t('.sm_info.login') + ': '
                        =vm_record.image_secrets.image_login.to_s
                      - rescue Exception => e
                        =t('infrastructure.information.sm_record_error', error: e.to_s)
