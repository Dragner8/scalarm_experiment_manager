- content_for :title, t('.title')
- content_for :help, raw(t('help.simulations.conduct'))

= form_tag experiments_path, id: 'experiment_submit_form' do
  = hidden_field_tag 'simulation_id', @simulation.id
  = hidden_field_tag 'experiment_input'
  = hidden_field_tag 'doe'
  = hidden_field_tag 'calculate-experiment-size-url', calculate_experiment_size_experiments_path
  = hidden_field_tag 'parameters_constraints'

  = render 'experiments/new/basic_information'

  %section.panel.radius.simulation_input
    %ul.button-group.right.round
      %li
        %a#manual-off.tiny.button.secondary.clicked(href="#") On
      %li
        %a#manual-on.tiny.button.secondary(href="#") Off

    %h3.subheader#manual-header= t('.input_header')

    .content
      %dl.tabs(data-tab="")
        %dd.active
          = link_to t('.input_parametrization_types'), '#parametrization'
        %dd
          = link_to t('.input_doe'), '#doe'
        %dd
          = link_to t('.params_constraints'), '#constraints'

      .tabs-content
        #parametrization.content.active
          = render 'experiments/new/parametrization'
        #doe.content
          = render 'experiments/new/design_of_experiment'
        #constraints.content
          = render 'experiments/new/parameter_constraints'

%section#import.panel.radius.last-element
  = render 'experiments/new/import_tab'

.row.submit-section
  = submit_tag t('.submit_button'), id: 'new_experiment_submit', class: 'button radius last-element'
  = button_tag t('.experiment_size_button'), class: 'button radius last-element', id: 'check-experiment-size'
  = image_tag 'loading.gif', id: 'conduct-loading', style: 'display: none;'


#experiment-size-dialog.reveal-modal(data-reveal="" style="display: none;")
  %h2.subheader= raw t('.experiment_size_dialog_body')
  %a.close-reveal-modal &#215;

#error-dialog.reveal-modal.hidden(data-reveal="")
  %h2.subheader= t(".error_dialog_header")
  %a.close-reveal-modal &#215;

  .alert-box.alert.radius.hidden(data-alert="")

- content_for :javascript do
  :javascript
    $(function() {
      window.toggle_panels_on_title_click();

      var input_space = new window.InputSpace(#{raw @simulation.input_specification.to_json});
      var input_space_importer = new window.InputSpaceImporter("#{simulations_upload_parameter_space_path}",
                                                               "#{calculate_imported_experiment_size_experiments_path}");

      var doe_manager = new window.ExperimentDesigner(input_space);

      $("#experiment_submit_form").on("submit", function() {
        input_space.updateAllInputParameterValues();
      });

      $("#new_experiment_submit").on("click", function() {
        if($("#manual-off").hasClass("clicked")) {
          $("#experiment_submit_form").submit();
        }
        else {
          $("#import-form").submit();
        }
      });

      $("#check-experiment-size").on("click", function() {
        if($("#manual-off").hasClass("clicked")) {
          doe_manager.checkExperimentSize();
        }
        else {
          input_space_importer.checkImportedSize();
        }
      });

      $("#manual-on").on("click", window.InputParameterSpaceSwitcher.manualSwitchOff);
      $("#manual-off").on("click", window.InputParameterSpaceSwitcher.manualSwitchOn);
      $("#import-on").on("click", window.InputParameterSpaceSwitcher.importSwitchOff);
      $("#import-off").on("click", window.InputParameterSpaceSwitcher.importSwitchOn);

      $("#import-on").click();

      $("#manual-header").on("click", function(event) {
        if(event.originalEvent) {
          if($("#manual-off").hasClass("clicked")) {
            $("#manual-off").removeClass("clicked");
            $("#manual-on").addClass("clicked");
            $("#import-off").click();
          }
          else {
            $("#manual-off").addClass("clicked");
            $("#manual-on").removeClass("clicked");
            $("#import-on").click();
          }
        }
      });

      $("#import-header").on("click", function(event) {
        if(event.originalEvent) {
          if($("#import-off").hasClass("clicked")) {
            $("#import-off").removeClass("clicked");
            $("#import-on").addClass("clicked");
            $("#manual-off").click();
          }
          else {
            $("#import-off").addClass("clicked");
            $("#import-on").removeClass("clicked");
            $("#manual-on").click();
          }
        }
      })

      $("#createDoeGroupBtn").on("click", function() { doe_manager.createDoeGroup('doe_type'); });
    });
