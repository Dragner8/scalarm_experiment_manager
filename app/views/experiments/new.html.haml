- es_url = sample_service_url('experiment_supervisors')
- supervisor_ids = get_supervisor_ids(es_url)

- content_for :title, t('.title')
- content_for :help, raw(t('help.simulations.conduct'))

-#:coffeescript
-#  window.alert("supervisors_ids: #{supervisor_ids.to_s}")

- unless supervisor_ids.empty?
  %section.panel.radius
    %h3.subheader= t('experiments.optimization_method.title')
    .content
      .row
        .small-5.columns
          %label.inline.right
            = t('experiments.optimization_method.selector')
        .small-5.columns
          = select_tag 'experiment_type_select', options_for_select([t('experiments.optimization_method.manual'), t('experiments.optimization_method.automatic')], t('experiments.optimization_method.manual'))
        .small-2.-columns

  #manual-experiment-panel
    %section.panel.radius
      %h3.subheader= t('experiments.manual_experiment.title')
      .content
        .row
          .small-5.columns
            %label.inline.right
              = t('experiments.manual_experiment.selector')
          .small-5.columns
            = select_tag 'input_space_select', options_for_select([t('experiments.manual_experiment.manual_designed'), t('experiments.manual_experiment.csv_imported')], t('experiments.manual_experiment.manual_designed'))
          .small-2.-columns

  #automatic-experiment-panel{:style => 'display: none'}
    %section.panel.radius
      %h3.subheader= t('experiments.automatic_experiment.title')
      .content
        .row
          .small-5.columns
            %label.inline.right
              = t('experiments.automatic_experiment.selector')
          .small-5.columns
            = select_tag 'supervisor_select', supervisor_options_without_none(supervisor_ids)
          .small-2.columns
            #supervisor_form_loader

= form_tag experiments_path, id: 'experiment_submit_form' do
  = hidden_field_tag 'simulation_id', @simulation.id
  = hidden_field_tag 'experiment_input'
  = hidden_field_tag 'doe'
  = hidden_field_tag 'calculate-experiment-size-url', calculate_experiment_size_experiments_path
  = hidden_field_tag 'parameters_constraints'

  = render 'experiments/new/basic_information'

  #supervisor_fields

#input-space-parameters
  %section.panel.radius.simulation_input
    %h3.subheader#manual-header= t('.input_header')

    .content
      %dl.tabs(data-tab="")
        %dd.active
          = link_to t('.input_parametrization_types'), '#parametrization'
        %dd
          = link_to t('.input_doe'), '#doe'
        %dd
          = link_to t('.params_constraints'), '#constraints'

      .tabs-content
        #parametrization.content.active
          = render 'experiments/new/parametrization'
        #doe.content
          = render 'experiments/new/design_of_experiment'
        #constraints.content
          = render 'experiments/new/parameter_constraints'

#import{:style => 'display: none'}
  %section.panel.radius
    = render 'experiments/new/import_tab'

.row.submit-section
  = submit_tag t('.submit_button'), id: 'new_experiment_submit', class: 'button radius last-element'
  = button_tag t('.experiment_size_button'), class: 'button radius last-element', id: 'check-experiment-size'
  = image_tag 'loading.gif', id: 'conduct-loading', style: 'display: none;'

#experiment-size-dialog.reveal-modal(data-reveal="" style="display: none;")
  %h2.subheader= raw t('.experiment_size_dialog_body')
  %a.close-reveal-modal &#215;

#error-dialog.reveal-modal.hidden(data-reveal="")
  %h2.subheader= t(".error_dialog_header")
  %a.close-reveal-modal &#215;

  .alert-box.alert.radius.hidden(data-alert="")

- content_for :javascript do
  :javascript
    $(function() {
      var es_url = "#{es_url}";

      if (es_url) {
        new window.SupervisorBooster(es_url);
      } else {
        window.console.log("ExperimentSupervisor view script was not loaded due to lack of ES url");
      }

      window.toggle_panels_on_title_click();
      var input_space = new window.InputSpace(#{raw @simulation.input_specification.to_json});
      var input_space_importer = new window.InputSpaceImporter("#{simulations_upload_parameter_space_path}",
                                                               "#{calculate_imported_experiment_size_experiments_path}");

      var doe_manager = new window.ExperimentDesigner(input_space);

      $("#new_experiment_submit").on("click", function() {
        if($('#input-space-parameters').is(":visible")) {
          // standart experiment
          if($("#manual-off").hasClass("clicked")) {
            input_space.updateAllInputParameterValues();
            $("#experiment_submit_form").submit();
          }
          else {
            $("#import-form").submit();
          }
        } else {
          // supervised
          var builder = {};
          $('#supervisor_fields *').filter(':input').each(function(key, value){
              if (value.name != "utf8" && value.name != "authenticity_token") {
                if (value.type == 'number') {
                  builder[value.name] = Number(value.value)
                } else {
                  builder[value.name] = value.value
                }
              }
          });
          $("input[name='supervisor_script_params']").val(JSON.stringify(builder));
          $("#experiment_submit_form").submit();
        }
      });

      $("#check-experiment-size").on("click", function() {
        if($("#manual-off").hasClass("clicked")) {
          doe_manager.checkExperimentSize();
        }
        else {
          input_space_importer.checkImportedSize();
        }
      });

      $("#createDoeGroupBtn").on("click", function() { doe_manager.createDoeGroup('doe_type'); });


      $("#experiment_type_select").on("change", function() {
        if (!$("#experiment_type_select").find(":selected").val().localeCompare("#{t('experiments.optimization_method.manual')}")) {
          $("#automatic-experiment-panel").hide();
          $("#supervisor_fields").hide();
          $("#manual-experiment-panel").show();
          if (!$("#input_space_select").find(":selected").val().localeCompare("#{t('experiments.manual_experiment.manual_designed')}")) {
            $("#import").hide();
            $("#input-space-parameters").show();
          }
          else if (!$("#input_space_select").find(":selected").val().localeCompare("#{t('experiments.manual_experiment.csv_imported')}")) {
            $("#input-space-parameters").hide();
            $("#import").show();
          }
        }
        else if (!$("#experiment_type_select").find(":selected").val().localeCompare("#{t('experiments.optimization_method.automatic')}")) {
          $("#manual-experiment-panel").hide();
          $("#input-space-parameters").hide();
          $("#import").hide();
          $("#automatic-experiment-panel").show();
          $("#supervisor_fields").show();
        }
      });

      $("#input_space_select").on("change", function() {
        if (!$("#input_space_select").find(":selected").val().localeCompare("#{t('experiments.manual_experiment.manual_designed')}")) {
          $("#input-space-parameters").show();
          $("#import").hide();
        }
        else if (!$("#input_space_select").find(":selected").val().localeCompare("#{t('experiments.manual_experiment.csv_imported')}")) {
          $("#import").show();
          $("#input-space-parameters").hide();
        }
      });

      if (!$("#experiment_type_select").find(":selected").val().localeCompare("#{t('experiments.optimization_method.manual')}")) {
        $("#automatic-experiment-panel").hide();
        $("#supervisor_fields").hide();
        $("#manual-experiment-panel").show();
        if (!$("#input_space_select").find(":selected").val().localeCompare("#{t('experiments.manual_experiment.manual_designed')}")) {
          $("#import").hide();
          $("#input-space-parameters").show();
        }
        else if (!$("#input_space_select").find(":selected").val().localeCompare("#{t('experiments.manual_experiment.csv_imported')}")) {
          $("#input-space-parameters").hide();
          $("#import").show();
        }
        }
        else if (!$("#experiment_type_select").find(":selected").val().localeCompare("#{t('experiments.optimization_method.automatic')}")) {
          $("#manual-experiment-panel").hide();
          $("#input-space-parameters").hide();
          $("#import").hide();
          $("#automatic-experiment-panel").show();
          $("#supervisor_fields").show();
        }

    });
