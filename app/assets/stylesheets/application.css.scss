/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
 * or vendor/assets/stylesheets of plugins, if any, can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the top of the
 * compiled file, but it's generally better to create a new file per style scope.
 *
 *= require_self
 *= require foundation
 *= require foundation_and_overrides
 *= require dataTables/jquery.dataTables
 *= require toastr
 *= require jstree-themes/default/style
 *= require nanoscroller
 *= require_tree .
 * require jquery-ui
 * require_tree jstree-themes
 */

@import 'foundation-icons';
@import 'font-awesome-sprockets';
@import 'font-awesome';

.hidden {
  display: none;
}

.unselectable {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.log-box {
  max-height: 350px;
  overflow-y: scroll;
  font-size: 12px;
  font-family: monospace
}

.toast-top-right {
  top: 100px;
  right: 12px;
}

// for more colors, see: http://lipis.github.io/bootstrap-social/
$facebook-color: #3b5998;
$twitter-color: #55acee;
$google-color: #d50f25;
$plgrid-color: rgb(10, 115, 148);
$github-color: #444444;
$username-color: #F7931E;
//$text-transform: uppercase;
$icon-size: 2rem;

@import "foundation/components/buttons";
@import "foundation/components/split-buttons";

.split.button {
  width: 100%;

  &.custom-split {
    //text-transform: $text-transform;
    text-align: left;
    padding-left: 64px;
    padding-right: 6px;
    span {
      left: 0;
      padding-left: 2px;
      padding-top: 12px;
      border-left: none;
      border-right: 1px solid rgba(255, 255, 255, 0.5);
      border-radius: 3px;
      text-align: center;
      &:after {
        border: none;
        font-size: $icon-size;
      }
    }

    // TODO: refactor to generate styles only with color variable

    &.google {
      background: $google-color;
      span {
        background: darken($google-color, 10%);
      }
      &.custom-split:hover {
        background: darken($google-color, 10%);
      }
    }

    &.plgrid {
      background: $plgrid-color;
      span {
        background: darken($plgrid-color, 10%);
      }
      &.custom-split:hover {
        background: darken($plgrid-color, 10%);
      }
    }

    &.github {
      background: $github-color;
      span {
        background: darken($github-color, 10%);
      }
      &.custom-split:hover {
        background: darken($github-color, 10%);
      }
    }

    &.username {
      background: $username-color;
      span {
        background: darken($username-color, 10%);
      }
      &.custom-split:hover {
        background: darken($username-color, 10%);
      }
    }

  }
}

.in-middle {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}



//&.facebook {
//  background: $facebook-color;
//  text-transform: $text-transform;
//  span {
//    background: darken( $facebook-color, 10% );
//    &:after {
//      border: none;
//      font-family: "foundation-icons";
//      content: "\f1c4";
//      font-size: $icon-size;
//      line-height: 0.25rem;
//      margin-left: -0.7rem;
//    }
//  }
//}
//
//&.twitter {
//  background: $twitter-color;
//  text-transform: $text-transform;
//  span {
//    background: darken( $twitter-color, 10% );
//    &:after {
//      border: none;
//      font-family: "foundation-icons";
//      content: "\f1e4";
//      font-size: $icon-size;
//      line-height: 0.25rem;
//      margin-left: -0.7rem;
//    }
//  }
//}